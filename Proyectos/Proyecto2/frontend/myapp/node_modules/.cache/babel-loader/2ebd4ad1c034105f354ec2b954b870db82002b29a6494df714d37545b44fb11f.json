{"ast":null,"code":"var _jsxFileName = \"/home/marjorie/Proyecto2/frontend/myapp/src/components/BarsChart.js\";\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, Title, Tooltip, Legend, Filler);\nfunction BarsChart(props) {\n  var options = {\n    responsive: true,\n    animation: false,\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      y: {\n        min: 0,\n        max: 100\n      },\n      x: {\n        ticks: {\n          color: 'rgba(0, 220, 195)'\n        }\n      }\n    }\n  };\n  const arr1 = [];\n  const arr2 = [];\n  if (props.Type === 1) {\n    for (let i = 0; i < props.Data.length; i++) {\n      arr1.push(props.Data[i].nombre);\n      arr2.push(props.Data[i].promedio);\n    }\n  } else if (props.Type === 2) {\n    for (let i = 0; i < props.Data.length; i++) {\n      arr1.push(props.Data[i].nombre_curso);\n      arr2.push(props.Data[i].cantidad);\n    }\n  } else if (props.Type === 3) {\n    console.log(props.Data.selected);\n    arr1.push(props.Data.selected);\n    arr2.push(props.Data.val);\n  }\n  var data = {\n    labels: arr1,\n    datasets: [{\n      label: '',\n      data: arr2,\n      backgroundColor: 'rgba(0, 220, 195, 0.5)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 12\n  }, this);\n}\n_c = BarsChart;\nexport default BarsChart;\nvar _c;\n$RefreshReg$(_c, \"BarsChart\");","map":{"version":3,"names":["Bar","Chart","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","Title","Tooltip","Legend","Filler","jsxDEV","_jsxDEV","register","BarsChart","props","options","responsive","animation","plugins","legend","display","scales","y","min","max","x","ticks","color","arr1","arr2","Type","i","Data","length","push","nombre","promedio","nombre_curso","cantidad","console","log","selected","val","data","labels","datasets","label","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marjorie/Proyecto2/frontend/myapp/src/components/BarsChart.js"],"sourcesContent":["import { Bar } from 'react-chartjs-2';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n    Filler,\n} from 'chart.js';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n    Filler\n);\n\nfunction BarsChart(props) {\n\n    var options = {\n        responsive: true,\n        animation: false,\n        plugins: {\n            legend: {\n                display: false\n            }\n        },\n        scales: {\n            y: {\n                min: 0,\n                max: 100\n            },\n            x: {\n                ticks: { color: 'rgba(0, 220, 195)' }\n            }\n        }\n    };\n\n    const arr1 = [];\n    const arr2 = [];\n\n    if (props.Type === 1){\n        for (let i = 0; i < props.Data.length; i++) {\n            arr1.push(props.Data[i].nombre);\n            arr2.push(props.Data[i].promedio);\n        }\n    } else if (props.Type === 2){\n        for (let i = 0; i < props.Data.length; i++) {\n            arr1.push(props.Data[i].nombre_curso);\n            arr2.push(props.Data[i].cantidad);\n        }\n    } else if (props.Type === 3){\n        console.log(props.Data.selected)\n        arr1.push(props.Data.selected)\n        arr2.push(props.Data.val)\n    } \n\n    var data = {\n\n        labels: arr1,\n        datasets: [\n            {\n                label: '',\n                data: arr2,\n                backgroundColor: 'rgba(0, 220, 195, 0.5)'\n            }\n        ]\n    };\n\n\n    return <Bar data={data} options={options} />\n}\n\nexport default BarsChart;"],"mappings":";AAAA,SAASA,GAAG,QAAQ,iBAAiB;AACrC,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MAAM,QACH,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBV,OAAO,CAACW,QAAQ,CACZV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MACJ,CAAC;AAED,SAASI,SAASA,CAACC,KAAK,EAAE;EAEtB,IAAIC,OAAO,GAAG;IACVC,UAAU,EAAE,IAAI;IAChBC,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,OAAO,EAAE;MACb;IACJ,CAAC;IACDC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE;MACT,CAAC;MACDC,CAAC,EAAE;QACCC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAoB;MACxC;IACJ;EACJ,CAAC;EAED,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,IAAI,GAAG,EAAE;EAEf,IAAIf,KAAK,CAACgB,IAAI,KAAK,CAAC,EAAC;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,KAAK,CAACkB,IAAI,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MACxCH,IAAI,CAACM,IAAI,CAACpB,KAAK,CAACkB,IAAI,CAACD,CAAC,CAAC,CAACI,MAAM,CAAC;MAC/BN,IAAI,CAACK,IAAI,CAACpB,KAAK,CAACkB,IAAI,CAACD,CAAC,CAAC,CAACK,QAAQ,CAAC;IACrC;EACJ,CAAC,MAAM,IAAItB,KAAK,CAACgB,IAAI,KAAK,CAAC,EAAC;IACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,KAAK,CAACkB,IAAI,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MACxCH,IAAI,CAACM,IAAI,CAACpB,KAAK,CAACkB,IAAI,CAACD,CAAC,CAAC,CAACM,YAAY,CAAC;MACrCR,IAAI,CAACK,IAAI,CAACpB,KAAK,CAACkB,IAAI,CAACD,CAAC,CAAC,CAACO,QAAQ,CAAC;IACrC;EACJ,CAAC,MAAM,IAAIxB,KAAK,CAACgB,IAAI,KAAK,CAAC,EAAC;IACxBS,OAAO,CAACC,GAAG,CAAC1B,KAAK,CAACkB,IAAI,CAACS,QAAQ,CAAC;IAChCb,IAAI,CAACM,IAAI,CAACpB,KAAK,CAACkB,IAAI,CAACS,QAAQ,CAAC;IAC9BZ,IAAI,CAACK,IAAI,CAACpB,KAAK,CAACkB,IAAI,CAACU,GAAG,CAAC;EAC7B;EAEA,IAAIC,IAAI,GAAG;IAEPC,MAAM,EAAEhB,IAAI;IACZiB,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,EAAE;MACTH,IAAI,EAAEd,IAAI;MACVkB,eAAe,EAAE;IACrB,CAAC;EAET,CAAC;EAGD,oBAAOpC,OAAA,CAACZ,GAAG;IAAC4C,IAAI,EAAEA,IAAK;IAAC5B,OAAO,EAAEA;EAAQ;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChD;AAACC,EAAA,GAtDQvC,SAAS;AAwDlB,eAAeA,SAAS;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}