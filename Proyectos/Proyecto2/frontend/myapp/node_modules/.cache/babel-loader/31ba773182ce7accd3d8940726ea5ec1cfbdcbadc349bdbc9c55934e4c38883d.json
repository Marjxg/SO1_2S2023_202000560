{"ast":null,"code":"var _jsxFileName = \"/home/marjorie/Proyecto2/frontend/myapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, Fragment } from 'react';\nimport './App.css';\nimport { Routes, Route } from 'react-router-dom';\nimport Graphs from './components/Graphs';\nimport Reader from './components/Reader';\nimport PIDtable from './components/PIDtable';\nimport ListButton from './components/ListButton';\nimport InsertButton from './components/InsertButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estado para almacenar las máquinas que estarán en el select \n  const [machine, setMachine] = useState([]);\n  useEffect(() => {\n    const getMachines = () => {\n      const requestInit = {\n        Method: 'GET',\n        Header: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('http://34.94.205.206:9000/api', requestInit).then(res => res.json()).then(res => setMachine(res));\n    };\n    getMachines();\n  }, []);\n\n  // Estado para almacenar la información de una máquina\n  const [data, setData] = useState([]);\n\n  // Estado para almacenar los procesos\n  const [procesos, setProcesos] = useState([]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Reader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 36\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"historico\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contenedor\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(ListButton, {\n                Maquinas: machine,\n                Data: data,\n                SetData: setData,\n                Procesos: procesos,\n                SetProcesos: setProcesos\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Graphs, {\n                Data: data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contenedor\",\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 22\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(ListButton, {\n                Maquinas: machine,\n                Data: data,\n                SetData: setData,\n                Procesos: procesos,\n                SetProcesos: setProcesos\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Graphs, {\n                Data: data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InsertButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(PIDtable, {\n                Procesos: procesos\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"46BZDROSNd8NOZBQ18rH9+JspFg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Fragment","Routes","Route","Graphs","Reader","PIDtable","ListButton","InsertButton","jsxDEV","_jsxDEV","App","_s","machine","setMachine","getMachines","requestInit","Method","Header","fetch","then","res","json","data","setData","procesos","setProcesos","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","Maquinas","Data","SetData","Procesos","SetProcesos","_c","$RefreshReg$"],"sources":["/home/marjorie/Proyecto2/frontend/myapp/src/App.js"],"sourcesContent":["import { useState, useEffect, Fragment } from 'react';\nimport './App.css';\nimport { Routes, Route } from 'react-router-dom'\nimport Graphs from './components/Graphs';\nimport Reader from './components/Reader';\nimport PIDtable from './components/PIDtable';\nimport ListButton from './components/ListButton';\nimport InsertButton from './components/InsertButton';\n\nfunction App() {\n\n  // Estado para almacenar las máquinas que estarán en el select \n  const [machine, setMachine] = useState([])\n\n  useEffect(() => {\n    const getMachines = () => {\n      const requestInit = {\n        Method: 'GET',\n        Header: { 'Access-Control-Allow-Origin': '*', 'Content-Type': 'application/json' }\n      }\n\n      fetch('http://34.94.205.206:9000/api', requestInit)\n        .then(res => res.json())\n        .then(res => setMachine(res))\n    }\n    getMachines()\n  }, [])\n\n  // Estado para almacenar la información de una máquina\n  const [data, setData] = useState([])\n\n  // Estado para almacenar los procesos\n  const [procesos, setProcesos] = useState([])\n\n  return (\n    <Fragment>\n      <div className=\"App\">\n        <Routes>\n          <Route path='/' element={<Reader />}>\n            <Route path='historico' element={\n              <div className='contenedor'>\n                <br/><br/><br/>\n                <ListButton\n                  Maquinas={machine}\n                  Data={data}\n                  SetData={setData}\n                  Procesos={procesos}\n                  SetProcesos={setProcesos} />\n                <Graphs\n                  Data={data} />\n              </div>\n            } />\n            <Route path='/' element={\n              <div className='contenedor'>\n                <br/><br/><br/>\n                <ListButton\n                  Maquinas={machine}\n                  Data={data}\n                  SetData={setData}\n                  Procesos={procesos}\n                  SetProcesos={setProcesos} />\n                <Graphs\n                  Data={data} />\n                <InsertButton />\n                <PIDtable\n                  Procesos={procesos} />\n              </div>\n            } />\n          </Route>\n        </Routes>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}